{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Alert from '../components/Alert';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Orders = function Orders(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Orders\"), props.orders ? __jsx(\"table\", {\n    \"class\": \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Order Id\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Park Id\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Date\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Type\"), __jsx(\"th\", {\n    scople: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Amount\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.orders.map(function (order) {\n    return __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, order.oid)), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, order.pid)), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, order.date)), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, order.type)), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, order.amount)), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/orders/[id]\",\n      as: \"/orders/\".concat(order.oid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      role: \"button\",\n      \"class\": \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"View\")), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      type: \"button\",\n      \"class\": \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Delete\")));\n  }))) : __jsx(Alert, {\n    type: \"danger\",\n    text: \"No order yet!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n};\n\nOrders.getInitialProps = function _callee(context) {\n  var res, orders;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/orders\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          orders = _context.sent;\n          return _context.abrupt(\"return\", {\n            orders: orders\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Orders;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/orders.js"],"names":["Layout","Alert","Link","fetch","Orders","props","orders","map","order","oid","pid","date","type","amount","getInitialProps","context","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,KAAK,CAACC,MAAN,GACG;AAAO,aAAM,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAGE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE;AAAI,IAAA,MAAM,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF,CADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACC,GAAV,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACE,GAAV,CADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,KAAK,CAACG,IAAV,CADF,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAK,CAACI,IAAV,CADF,CAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,KAAK,CAACK,MAAV,CADF,CAbF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,oBAAaL,KAAK,CAACC,GAAnB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,QAAR;AAAiB,eAAM,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,eAAM,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAhBF,CADiB;AAAA,GAAtB,CADL,CAVA,CADH,GA0CD,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,CADkB;AAAA,CAApB;;AAkDAL,MAAM,CAACU,eAAP,GAAyB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLZ,KAAK,wCADA;;AAAA;AACjBa,UAAAA,GADiB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEjBX,UAAAA,MAFiB;AAAA,2CAIhB;AAAEA,YAAAA,MAAM,EAANA;AAAF,WAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAOA,eAAeF,MAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Alert from '../components/Alert';\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch';\n\nconst Orders = props => (\n  <Layout>\n    <h1>Orders</h1>\n    {props.orders ?\n        <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Order Id</th>\n            <th scope=\"col\">Park Id</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Type</th>\n            <th scople=\"col\">Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n            {props.orders.map(order => (\n                  <tr>\n                    <td>\n                      <a>{order.oid}</a>\n                    </td>\n                    <td>\n                      <a>{order.pid}</a>\n                    </td>\n                    <td>\n                      <a>{order.date}</a>\n                    </td>\n                    <td>\n                      <a>{order.type}</a>\n                    </td>\n                    <td>\n                      <a>{order.amount}</a>\n                    </td>\n                    <td>\n                      <Link href=\"/orders/[id]\" as={`/orders/${order.oid}`}>\n                        <a role=\"button\" class=\"btn btn-success\">View</a>\n                      </Link>\n                      <span/>\n                      <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n                    </td>\n                  </tr>\n              ))}\n  \n        </tbody>\n      </table>\n    :\n    <Alert type=\"danger\" text=\"No order yet!\"></Alert>\n    }\n  </Layout>\n);\n\nOrders.getInitialProps = async function(context) {\n  const res = await fetch(`http://localhost:8080/parkpay/orders`);\n  const orders = await res.json();\n\n  return { orders };\n};\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}