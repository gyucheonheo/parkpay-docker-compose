{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/Notes/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Note = function Note(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.note.title), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.note.date), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.note.text)));\n};\n\nNote.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          console.log(\"\".concat(id)); //   const res = await fetch(`http://localhost:8080/parkpay/parks/${id}`);\n          //   const notes = await res.json();\n          //   return { notes };\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Note;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/Notes/[id].js"],"names":["Layout","fetch","Note","props","note","title","date","text","getInitialProps","context","id","query","console","log"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACC,IAAN,CAAWE,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACC,IAAN,CAAWG,IAAhB,CAFF,CAFF,CADgB;AAAA,CAAlB;;AAUAL,IAAI,CAACM,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAErBE,UAAAA,OAAO,CAACC,GAAR,WAAeH,EAAf,GAFqB,CAGvB;AACA;AAEA;;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AASA,eAAeR,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Note = props => (\n  <Layout>\n    <h1>{props.note.title}</h1>\n    <ul>\n      <li>{props.note.date}</li>\n      <li>{props.note.text}</li>     \n    </ul>\n  </Layout>\n);\n\nNote.getInitialProps = async function(context) {\n  const { id } = context.query;\n  console.log(`${id}`)\n//   const res = await fetch(`http://localhost:8080/parkpay/parks/${id}`);\n//   const notes = await res.json();\n\n//   return { notes };\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}