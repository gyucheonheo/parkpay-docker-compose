{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/visitors/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Visitor = function Visitor(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.visitor.visitor.name), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.visitor.visitor.email), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Orders\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.visitor.orders.map(function (order) {\n    return __jsx(\"li\", {\n      key: order.oid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, order.oid, \",\", order.pid, \",\", order.date);\n  }))));\n};\n\nVisitor.getInitialProps = function _callee(context) {\n  var id, res, visitor;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/parks/visitors/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          visitor = _context.sent;\n          return _context.abrupt(\"return\", {\n            visitor: visitor\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Visitor;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/visitors/[id].js"],"names":["Layout","fetch","Visitor","props","visitor","name","email","orders","map","order","oid","pid","date","getInitialProps","context","id","query","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACnB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,OAAN,CAAcA,OAAd,CAAsBC,IAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACC,OAAN,CAAcA,OAAd,CAAsBE,KAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACC,OAAN,CAAcG,MAAd,CAAqBC,GAArB,CAAyB,UAAAC,KAAK;AAAA,WAC3B;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACC,GADX,OACiBD,KAAK,CAACE,GADvB,OAC6BF,KAAK,CAACG,IADnC,CAD2B;AAAA,GAA9B,CADL,CAHF,CAFF,CADmB;AAAA,CAArB;;AAiBAV,OAAO,CAACW,eAAR,GAA0B,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,EADgB,GACTD,OAAO,CAACE,KADC,CAChBD,EADgB;AAAA;AAAA,2CAENd,KAAK,wDAAiDc,EAAjD,EAFC;;AAAA;AAElBE,UAAAA,GAFkB;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGlBd,UAAAA,OAHkB;AAAA,2CAKjB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WALiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAQA,eAAeF,OAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Visitor = props => (\n  <Layout>\n    <h1>{props.visitor.visitor.name}</h1>\n    <ul>\n      <li>{props.visitor.visitor.email}</li>\n      <li>Orders</li>\n      <ul>\n          {props.visitor.orders.map(order => (\n              <li key={order.oid}>\n                  {order.oid},{order.pid},{order.date}\n              </li>\n          ))}\n      </ul>\n    </ul>\n  </Layout>\n);\n\nVisitor.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/parks/visitors/${id}`);\n  const visitor = await res.json();\n\n  return { visitor };\n};\n\nexport default Visitor;"]},"metadata":{},"sourceType":"module"}