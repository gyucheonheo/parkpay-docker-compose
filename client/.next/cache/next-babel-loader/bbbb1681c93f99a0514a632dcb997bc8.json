{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/reports/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Report = function Report(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.report.name), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"start date : \", props.report.start_date), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"end date : \", props.report.end_date), props.report.total_admissions ? __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Total admission : \", props.report.total_admissions) : __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \" Total Orders : \", props.report.total_orders), props.report.total_revenue ? __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" Total Revenue : \", props.report.total_revenue) : __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.report.detail_by_park ? props.report.detail_by_park.map(function (detail) {\n    return __jsx(\"li\", {\n      key: detail.pid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, detail.name, \" , \", detail.admissions);\n  }) : \"No detail by park yet\"));\n};\n\nReport.getInitialProps = function _callee(context) {\n  var id, res, report;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/reports/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          report = _context.sent;\n          return _context.abrupt(\"return\", {\n            report: report\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Report;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/reports/[id].js"],"names":["Layout","fetch","Report","props","report","name","start_date","end_date","total_admissions","total_orders","total_revenue","detail_by_park","map","detail","pid","admissions","getInitialProps","context","id","query","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,MAAN,CAAaC,IAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,KAAK,CAACC,MAAN,CAAaE,UAA/B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBH,KAAK,CAACC,MAAN,CAAaG,QAA7B,CAHF,EAIGJ,KAAK,CAACC,MAAN,CAAaI,gBAAb,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBL,KAAK,CAACC,MAAN,CAAaI,gBAApC,CADC,GAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqBL,KAAK,CAACC,MAAN,CAAaK,YAAlC,CAPF,EASGN,KAAK,CAACC,MAAN,CAAaM,aAAb,GACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBP,KAAK,CAACC,MAAN,CAAaM,aAAnC,CADC,GAGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACC,MAAN,CAAaO,cAAb,GACGR,KAAK,CAACC,MAAN,CAAaO,cAAb,CAA4BC,GAA5B,CAAgC,UAAAC,MAAM;AAAA,WAClC;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,MAAM,CAACR,IADZ,SACqBQ,MAAM,CAACE,UAD5B,CADkC;AAAA,GAAtC,CADH,GAOG,uBARR,CAdF,CADkB;AAAA,CAApB;;AA6BAb,MAAM,CAACc,eAAP,GAAyB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,UAAAA,EADe,GACRD,OAAO,CAACE,KADA,CACfD,EADe;AAAA;AAAA,2CAELjB,KAAK,iDAA0CiB,EAA1C,EAFA;;AAAA;AAEjBE,UAAAA,GAFiB;AAAA;AAAA,2CAGFA,GAAG,CAACC,IAAJ,EAHE;;AAAA;AAGjBjB,UAAAA,MAHiB;AAAA,2CAKhB;AAAEA,YAAAA,MAAM,EAANA;AAAF,WALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAQA,eAAeF,MAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Report = props => (\n  <Layout>\n    <h1>{props.report.name}</h1>\n    <h2>start date : {props.report.start_date}</h2>\n    <h2>end date : {props.report.end_date}</h2>\n    {props.report.total_admissions ? \n    <h2>Total admission : {props.report.total_admissions}</h2>\n    :\n    <h2> Total Orders : {props.report.total_orders}</h2>\n    }\n    {props.report.total_revenue ?\n    <h2> Total Revenue : {props.report.total_revenue}</h2>\n    :\n    <h2></h2>\n    }\n    <ul>\n        {props.report.detail_by_park ? \n            props.report.detail_by_park.map(detail => (\n                <li key={detail.pid}>\n                    {detail.name} , {detail.admissions}\n                </li>\n            ))\n            :\n            \"No detail by park yet\"\n        }\n    </ul>\n  </Layout>\n);\n\nReport.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/reports/${id}`);\n  const report = await res.json();\n\n  return { report };\n};\n\nexport default Report;"]},"metadata":{},"sourceType":"module"}