{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/search/[keyword].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Search = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \"Search : \", props.keyword), __jsx(\"div\", {\n  class: \"card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"div\", {\n  class: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Parks\"), props.parks.map(park => __jsx(\"div\", {\n  class: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"h5\", {\n  class: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, park.location_info.name), __jsx(\"p\", {\n  class: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, park.location_info.address), __jsx(Link, {\n  href: \"/parks/[id]\",\n  as: `/parks/${park.pid}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(\"a\", {\n  role: \"button\",\n  class: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"View Detail\"))))), __jsx(\"div\", {\n  class: \"card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, __jsx(\"div\", {\n  class: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Orders\"), props.orders.map(order => __jsx(\"div\", {\n  class: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, __jsx(\"h5\", {\n  class: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, order.oid), __jsx(\"p\", {\n  class: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, order.date), __jsx(\"a\", {\n  href: \"#\",\n  class: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Go somewhere\")))), __jsx(\"div\", {\n  class: \"card\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, __jsx(\"div\", {\n  class: \"card-header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \"Visitors\"), props.visitors.map(visitor => __jsx(\"div\", {\n  class: \"card-body\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, __jsx(\"h5\", {\n  class: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, visitor.name), __jsx(\"p\", {\n  class: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, visitor.email), __jsx(\"a\", {\n  href: \"#\",\n  class: \"btn btn-primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Go somewhere\")))));\n\nSearch.getInitialProps = async function (context) {\n  const {\n    keyword\n  } = context.query;\n  const res_park = await fetch(`http://localhost:8080/parkpay/parks?key=${keyword}`);\n  const parks = await res_park.json();\n  const res_note = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n  const notes = await res_note.json();\n  const res_order = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n  const orders = await res_order.json();\n  const res_visitor = await fetch(`http://localhost:8080/parkpay/visitors?key=${keyword}`);\n  const visitors = await res_visitor.json();\n  return {\n    keyword,\n    parks,\n    orders,\n    visitors,\n    notes\n  };\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/search/[keyword].js"],"names":["Layout","fetch","Search","props","keyword","parks","map","park","location_info","name","address","pid","orders","order","oid","date","visitors","visitor","email","getInitialProps","context","query","res_park","json","res_note","notes","res_order","res_visitor"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Search = props => (\n  <Layout>\n    <h3>Search : {props.keyword}</h3>\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Parks\n      </div>\n      {props.parks.map(park => (\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{park.location_info.name}</h5>\n            <p class=\"card-text\">{park.location_info.address}</p>\n            <Link href=\"/parks/[id]\" as={`/parks/${park.pid}`}>\n            <a role=\"button\" class=\"btn btn-primary\">View Detail</a>\n            </Link>\n          </div>\n      ))}\n    </div>   \n\n    {/* <div class=\"card\">\n      <div class=\"card-header\">\n        Notes\n      </div>\n      {props.notes.map(note => (\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{note.title}</h5>\n            <p class=\"card-text\">{note.text}</p>\n            <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n          </div>\n      ))}\n    </div>    */}\n\n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Orders\n      </div>\n      {props.orders.map(order => (\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{order.oid}</h5>\n            <p class=\"card-text\">{order.date}</p>\n            <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n          </div>\n      ))}\n    </div>  \n\n    <div class=\"card\">\n      <div class=\"card-header\">\n        Visitors\n      </div>\n      {props.visitors.map(visitor => (\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">{visitor.name}</h5>\n            <p class=\"card-text\">{visitor.email}</p>\n            <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n          </div>\n      ))}\n    </div>  \n\n  </Layout>\n);\n\nSearch.getInitialProps = async function(context) {\n    const { keyword } = context.query;\n    const res_park = await fetch(`http://localhost:8080/parkpay/parks?key=${keyword}`);\n    const parks = await res_park.json();\n    const res_note = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n    const notes = await res_note.json();\n    const res_order = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n    const orders = await res_order.json(); \n    const res_visitor = await fetch(`http://localhost:8080/parkpay/visitors?key=${keyword}`);\n    const visitors = await res_visitor.json()\n    return { keyword, parks, orders, visitors, notes };\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}