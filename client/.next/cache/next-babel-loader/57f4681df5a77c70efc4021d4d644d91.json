{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/parks/notes/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Alert from '../../../components/Alert';\n\nconst Note = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \" Notes \"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.notes ? props.notes.map(note => __jsx(\"li\", {\n  key: note.nid,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/notes/[id]\",\n  as: `/notes/${note.nid}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, note.title)))) : __jsx(Alert, {\n  type: \"danger\",\n  text: \"No note for park\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n})));\n\nNote.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/parks/${id}/notes`);\n  const notes = await res.json();\n  return {\n    notes\n  };\n};\n\nexport default Note;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/parks/notes/[id].js"],"names":["fetch","Alert","Note","props","notes","map","note","nid","title","getInitialProps","context","id","query","res","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjC;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,aAAX;AAAyB,EAAA,EAAE,EAAG,UAASD,IAAI,CAACC,GAAI,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,KAAT,CADF,CADF,CADa,CAAd,GAOD,MAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,IAAI,EAAC,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARF,CAFF,CADJ;;AAgBAN,IAAI,CAACO,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE,uCAAsCW,EAAG,QAA3C,CAAvB;AACA,QAAMP,KAAK,GAAG,MAAMS,GAAG,CAACC,IAAJ,EAApB;AAEA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACC,CAND;;AAQA,eAAeF,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport Alert from '../../../components/Alert'\n\nconst Note = props => (\n    <div>\n      <h4> Notes </h4>\n      <ul>\n        {props.notes ? props.notes.map(note => (\n          <li key={note.nid}>\n            <Link href=\"/notes/[id]\" as={`/notes/${note.nid}`}>\n              <a>{note.title}</a>\n            </Link>\n          </li>\n        )) : \n        <Alert type=\"danger\" text=\"No note for park\"/>}\n      </ul>\n    </div>\n  )\n\nNote.getInitialProps = async function(context) {\nconst { id } = context.query;\nconst res = await fetch(`http://localhost:8080/parkpay/parks/${id}/notes`);\nconst notes = await res.json();\n\nreturn { notes };\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}