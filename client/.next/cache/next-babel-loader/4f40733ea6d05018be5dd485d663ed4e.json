{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Alert from '../components/Alert';\nimport TitleActionBar from '../components/TitleActionBar';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios';\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, __jsx(TitleActionBar, {\n  title: \"Parks\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}), props.parks ? __jsx(\"table\", {\n  className: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Name\"), __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Region\"), __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Actions\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.parks.map(park => __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, park.location_info.name)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, park.location_info.region)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/parks/[id]\",\n  as: `/parks/${park.pid}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, __jsx(\"a\", {\n  role: \"button\",\n  className: \"btn btn-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"View\")), __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), __jsx(Link, {\n  href: \"/parks/update/[id]\",\n  as: `/parks/update/${park.pid}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, __jsx(\"button\", {\n  type: \"button\",\n  className: \"btn btn-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"Update\")), __jsx(\"button\", {\n  type: \"button\",\n  className: \"btn btn-danger\",\n  onClick: handleDelete = event => {\n    event.preventDefault();\n    axios.delete(`http://localhost:8080/parkpay/parks/${park.pid}`).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, \"Delete\")))))) : __jsx(Alert, {\n  type: \"danger\",\n  text: \"No park data yet!\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('http://localhost:8080/parkpay/parks');\n  const data = await res.json();\n  console.log(data.parks);\n  return {\n    parks: data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/index.js"],"names":["Layout","Alert","TitleActionBar","Link","fetch","axios","Index","props","parks","map","park","location_info","name","region","pid","handleDelete","event","preventDefault","delete","then","response","console","log","catch","err","getInitialProps","res","data","json"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport Alert from '../components/Alert';\nimport TitleActionBar from '../components/TitleActionBar';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport axios from 'axios';\n\nconst Index = props => (\n  <Layout>\n    <TitleActionBar title=\"Parks\"/>\n    {props.parks ? \n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Region</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n          {props.parks.map(park => (\n                <tr>\n                  <td>\n                    <a>{park.location_info.name}</a>\n                  </td>\n                  <td>\n                    <a>{park.location_info.region}</a>\n                  </td>\n                  <td>\n                    <Link href=\"/parks/[id]\" as={`/parks/${park.pid}`}>\n                      <a role=\"button\" className=\"btn btn-info\">View</a>\n                    </Link>\n                    <span/>\n                    <Link href=\"/parks/update/[id]\" as={`/parks/update/${park.pid}`}>\n                      <button type=\"button\" className=\"btn btn-success\">Update</button>\n                    </Link>\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={\n                      handleDelete = event => {\n                        event.preventDefault();\n                        axios.delete(`http://localhost:8080/parkpay/parks/${park.pid}`)\n                        .then(response=>{\n                          console.log(response)\n                        })\n                        .catch(err => {\n                          console.log(err);\n                        })\n                      }\n                    }>Delete</button>\n                  </td>\n                </tr>\n            ))}\n\n      </tbody>\n    </table>\n    :\n     <Alert type=\"danger\" text=\"No park data yet!\"></Alert>\n    }\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('http://localhost:8080/parkpay/parks');\n  const data = await res.json();\n  console.log(data.parks)\n\n  return {\n    parks: data\n  };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}