{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/search/[keyword].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Search = function Search(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Search : \", props.keyword), props.parks.map(function (park) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, park.location_info.name);\n  }));\n};\n\nSearch.getInitialProps = function _callee(context) {\n  var keyword, res_park, parks, res_note, notes, res_order, orders, res_visitor, visitors;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          keyword = context.query.keyword;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/parks?key=\".concat(input)));\n\n        case 3:\n          res_park = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res_park.json());\n\n        case 6:\n          parks = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/notes?key=\".concat(input)));\n\n        case 9:\n          res_note = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res_note.json());\n\n        case 12:\n          notes = _context.sent;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/notes?key=\".concat(input)));\n\n        case 15:\n          res_order = _context.sent;\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(res_order.json());\n\n        case 18:\n          orders = _context.sent;\n          _context.next = 21;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/visitors?key=\".concat(input)));\n\n        case 21:\n          res_visitor = _context.sent;\n          _context.next = 24;\n          return _regeneratorRuntime.awrap(res_visitor.json());\n\n        case 24:\n          visitors = _context.sent;\n          return _context.abrupt(\"return\", {\n            keyword: keyword,\n            parks: parks,\n            notes: notes,\n            orders: orders,\n            visitors: visitors\n          });\n\n        case 26:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/search/[keyword].js"],"names":["Layout","fetch","Search","props","keyword","parks","map","park","location_info","name","getInitialProps","context","query","input","res_park","json","res_note","notes","res_order","orders","res_visitor","visitors"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcA,KAAK,CAACC,OAApB,CADF,EAEGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAI,CAACC,aAAL,CAAmBC,IAAvB,CADiB;AAAA,GAApB,CAFH,CADkB;AAAA,CAApB;;AASAP,MAAM,CAACQ,eAAP,GAAyB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbP,UAAAA,OADa,GACDO,OAAO,CAACC,KADP,CACbR,OADa;AAAA;AAAA,2CAEEH,KAAK,mDAA4CY,KAA5C,EAFP;;AAAA;AAEfC,UAAAA,QAFe;AAAA;AAAA,2CAGDA,QAAQ,CAACC,IAAT,EAHC;;AAAA;AAGfV,UAAAA,KAHe;AAAA;AAAA,2CAIEJ,KAAK,mDAA4CY,KAA5C,EAJP;;AAAA;AAIfG,UAAAA,QAJe;AAAA;AAAA,2CAKDA,QAAQ,CAACD,IAAT,EALC;;AAAA;AAKfE,UAAAA,KALe;AAAA;AAAA,2CAMGhB,KAAK,mDAA4CY,KAA5C,EANR;;AAAA;AAMfK,UAAAA,SANe;AAAA;AAAA,2CAOAA,SAAS,CAACH,IAAV,EAPA;;AAAA;AAOfI,UAAAA,MAPe;AAAA;AAAA,2CAQKlB,KAAK,sDAA+CY,KAA/C,EARV;;AAAA;AAQfO,UAAAA,WARe;AAAA;AAAA,2CASEA,WAAW,CAACL,IAAZ,EATF;;AAAA;AASfM,UAAAA,QATe;AAAA,2CAUd;AAAEjB,YAAAA,OAAO,EAAPA,OAAF;AAAWC,YAAAA,KAAK,EAALA,KAAX;AAAkBY,YAAAA,KAAK,EAALA,KAAlB;AAAyBE,YAAAA,MAAM,EAANA,MAAzB;AAAiCE,YAAAA,QAAQ,EAARA;AAAjC,WAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAaA,eAAenB,MAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Search = props => (\n  <Layout>\n    <h3>Search : {props.keyword}</h3>\n    {props.parks.map(park => (\n        <p>{park.location_info.name}</p>\n    ))}\n  </Layout>\n);\n\nSearch.getInitialProps = async function(context) {\n    const { keyword } = context.query;\n    const res_park = await fetch(`http://localhost:8080/parkpay/parks?key=${input}`);\n    const parks = await res_park.json();\n    const res_note = await fetch(`http://localhost:8080/parkpay/notes?key=${input}`);\n    const notes = await res_note.json();\n    const res_order = await fetch(`http://localhost:8080/parkpay/notes?key=${input}`);\n    const orders = await res_order.json(); \n    const res_visitor = await fetch(`http://localhost:8080/parkpay/visitors?key=${input}`);\n    const visitors = await res_visitor.json()\n    return { keyword, parks, notes, orders, visitors };\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}