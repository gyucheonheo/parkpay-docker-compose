{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/parks/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, props.park.location_info.name), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.park.location_info.region), __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, props.park.location_info.address), __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, props.park.location_info.web)), __jsx(Note, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nconst Note = props => __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \" Notes \"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.notes ? props.notes.map(note => __jsx(\"li\", {\n  key: note.nid,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, note.title)) : \"No note for park\"));\n\nNote.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/parks/${id}`);\n  const notes = await res.json();\n  return {\n    notes\n  };\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/parks/${id}`);\n  const park = await res.json();\n  return {\n    park\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/parks/[id].js"],"names":["Layout","fetch","Post","props","park","location_info","name","region","address","web","Note","notes","map","note","nid","title","getInitialProps","context","id","query","res","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBC,IAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBE,MAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKJ,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBG,OAA9B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBI,GAA9B,CAHF,CAFF,EAOE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF;;AAYA,MAAMC,IAAI,GAAGP,KAAK,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACQ,KAAN,GAAcR,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjC;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IAAI,CAACE,KADR,CADa,CAAd,GAII,kBALP,CAFF,CADF;;AAaAL,IAAI,CAACM,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAE,uCAAsCiB,EAAG,EAA3C,CAAvB;AACA,QAAMP,KAAK,GAAG,MAAMS,GAAG,CAACC,IAAJ,EAApB;AAEA,SAAO;AAAEV,IAAAA;AAAF,GAAP;AACD,CAND;;AAOAT,IAAI,CAACc,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAE,uCAAsCiB,EAAG,EAA3C,CAAvB;AACA,QAAMd,IAAI,GAAG,MAAMgB,GAAG,CAACC,IAAJ,EAAnB;AAEA,SAAO;AAAEjB,IAAAA;AAAF,GAAP;AACD,CAND;;AAQA,eAAeF,IAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.park.location_info.name}</h1>\n    <ul>\n      <li>{props.park.location_info.region}</li>\n      <li>{props.park.location_info.address}</li>     \n      <li>{props.park.location_info.web}</li> \n    </ul>\n    <Note />\n  </Layout>\n);\n\nconst Note = props => (\n  <div>\n    <h1> Notes </h1>\n    <ul>\n      {props.notes ? props.notes.map(note => (\n        <li key={note.nid}>\n          {note.title}   \n        </li>\n      )) : \"No note for park\"}\n    </ul>\n  </div>\n)\n\nNote.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/parks/${id}`);\n  const notes = await res.json();\n\n  return { notes };\n}\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/parks/${id}`);\n  const park = await res.json();\n\n  return { park };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}