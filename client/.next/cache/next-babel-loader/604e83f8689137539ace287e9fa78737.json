{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Orders = function Orders(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Orders\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.orders ? props.orders.map(function (order) {\n    return __jsx(\"li\", {\n      key: order.oid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/orders/[id]\",\n      as: \"/orders/\".concat(order.oid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, order.oid)));\n  }) : \"No order yet\"));\n};\n\nOrders.getInitialProps = function _callee(context) {\n  var res, orders;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/orders\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          orders = _context.sent;\n          return _context.abrupt(\"return\", {\n            orders: orders\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Orders;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/orders.js"],"names":["Layout","Link","fetch","Orders","props","orders","map","order","oid","getInitialProps","context","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,MAAN,GACGD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAAAC,KAAK;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,oBAAaD,KAAK,CAACC,GAAnB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACC,GAAV,CADJ,CADJ,CADkB;AAAA,GAAtB,CADH,GASG,cAVR,CAFF,CADkB;AAAA,CAApB;;AAmBAL,MAAM,CAACM,eAAP,GAAyB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLR,KAAK,wCADA;;AAAA;AACjBS,UAAAA,GADiB;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEjBP,UAAAA,MAFiB;AAAA,2CAIhB;AAAEA,YAAAA,MAAM,EAANA;AAAF,WAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAOA,eAAeF,MAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch';\n\nconst Orders = props => (\n  <Layout>\n    <h1>Orders</h1>\n    <ul>\n        {props.orders ? \n            props.orders.map(order => (\n                <li key={order.oid}>\n                    <Link href=\"/orders/[id]\" as={`/orders/${order.oid}`}>\n                        <a>{order.oid}</a>\n                    </Link>\n                </li>\n            ))\n            :\n            \"No order yet\"\n        }\n    </ul>\n  </Layout>\n);\n\nOrders.getInitialProps = async function(context) {\n  const res = await fetch(`http://localhost:8080/parkpay/orders`);\n  const orders = await res.json();\n\n  return { orders };\n};\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}