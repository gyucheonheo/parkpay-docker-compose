{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/visitors/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Visitor = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, props.visitor.visitor.name), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.visitor.visitor.email), __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Orders\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, props.visitor.order ? props.visitor.orders.map(order => __jsx(\"li\", {\n  key: order.oid,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, order.oid, \",\", order.pid, \",\", order.date)) : \"No order yet\"), __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"Notes\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, props.visitor.notes ? props.visitor.notes.map(note => __jsx(\"li\", {\n  key: note.nid,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, note.date, \" , \", note.title)) : \"No note yet\")));\n\nVisitor.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/visitors/${id}`);\n  const visitor = await res.json();\n  return {\n    visitor\n  };\n};\n\nexport default Visitor;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/visitors/[id].js"],"names":["Layout","fetch","Visitor","props","visitor","name","email","order","orders","map","oid","pid","date","notes","note","nid","title","getInitialProps","context","id","query","res","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IACnB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,OAAN,CAAcA,OAAd,CAAsBC,IAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKF,KAAK,CAACC,OAAN,CAAcA,OAAd,CAAsBE,KAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKH,KAAK,CAACC,OAAN,CAAcG,KAAd,GACDJ,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBC,GAArB,CAAyBF,KAAK,IAC1B;AAAI,EAAA,GAAG,EAAEA,KAAK,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKH,KAAK,CAACG,GADX,OACiBH,KAAK,CAACI,GADvB,OAC6BJ,KAAK,CAACK,IADnC,CADJ,CADC,GAOH,cARF,CAHF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKT,KAAK,CAACC,OAAN,CAAcS,KAAd,GACCV,KAAK,CAACC,OAAN,CAAcS,KAAd,CAAoBJ,GAApB,CAAwBK,IAAI,IACxB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,IAAI,CAACF,IADV,SACmBE,IAAI,CAACE,KADxB,CADJ,CADD,GAOC,aARN,CAfF,CAFF,CADF;;AAiCAd,OAAO,CAACe,eAAR,GAA0B,gBAAeC,OAAf,EAAwB;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMpB,KAAK,CAAE,0CAAyCkB,EAAG,EAA9C,CAAvB;AACA,QAAMf,OAAO,GAAG,MAAMiB,GAAG,CAACC,IAAJ,EAAtB;AAEA,SAAO;AAAElB,IAAAA;AAAF,GAAP;AACD,CAND;;AAQA,eAAeF,OAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Visitor = props => (\n  <Layout>\n    <h1>{props.visitor.visitor.name}</h1>\n    <ul>\n      <li>{props.visitor.visitor.email}</li>\n      <li>Orders</li>\n      <ul>\n          {props.visitor.order ?\n          props.visitor.orders.map(order => (\n              <li key={order.oid}>\n                  {order.oid},{order.pid},{order.date}\n              </li>\n          ))\n        :\n        \"No order yet\"\n        }\n      </ul>\n      <li>Notes</li>\n      <ul>\n          {props.visitor.notes ?\n            props.visitor.notes.map(note => (\n                <li key={note.nid}>\n                    {note.date} , {note.title}\n                </li>\n            ))\n            :\n            \"No note yet\"\n          }\n      </ul>\n    </ul>\n  </Layout>\n);\n\nVisitor.getInitialProps = async function(context) {\n  const { id } = context.query;\n  const res = await fetch(`http://localhost:8080/parkpay/visitors/${id}`);\n  const visitor = await res.json();\n\n  return { visitor };\n};\n\nexport default Visitor;"]},"metadata":{},"sourceType":"module"}