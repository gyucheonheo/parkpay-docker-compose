{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/search.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Search = function Search(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Reports\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.reports ? props.reports.map(function (report) {\n    return __jsx(\"li\", {\n      key: report.rid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/reports/[id]\",\n      as: \"/reports/\".concat(report.rid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, report.name)));\n  }) : __jsx(Alert, {\n    type: \"danger\",\n    text: \"No available reports yet!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })));\n};\n\nSearch.getInitialProps = function _callee(context) {\n  var res, reports;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:8080/parkpay/reports\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          reports = _context.sent;\n          return _context.abrupt(\"return\", {\n            reports: reports\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/search.js"],"names":["Layout","Link","fetch","Search","props","reports","map","report","rid","name","getInitialProps","context","res","json"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,OAAN,GACGD,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,EAAE,qBAAcD,MAAM,CAACC,GAArB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,MAAM,CAACE,IAAX,CADJ,CADJ,CADoB;AAAA,GAAxB,CADH,GASG,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,2BAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,CAFF,CADkB;AAAA,CAApB;;AAmBAN,MAAM,CAACO,eAAP,GAAyB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACLT,KAAK,yCADA;;AAAA;AACjBU,UAAAA,GADiB;AAAA;AAAA,2CAEDA,GAAG,CAACC,IAAJ,EAFC;;AAAA;AAEjBR,UAAAA,OAFiB;AAAA,2CAIhB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WAJgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAOA,eAAeF,MAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch';\n\nconst Search = props => (\n  <Layout>\n    <h3>Reports</h3>\n    <ul>\n        {props.reports ? \n            props.reports.map(report => (\n                <li key={report.rid}>\n                    <Link href=\"/reports/[id]\" as={`/reports/${report.rid}`}>\n                        <a>{report.name}</a>\n                    </Link>\n                </li>\n            ))\n            :\n            <Alert type=\"danger\" text=\"No available reports yet!\"></Alert>\n        }\n    </ul>\n  </Layout>\n);\n\nSearch.getInitialProps = async function(context) {\n  const res = await fetch(`http://localhost:8080/parkpay/reports`);\n  const reports = await res.json();\n\n  return { reports };\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}