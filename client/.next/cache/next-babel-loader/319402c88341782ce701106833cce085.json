{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/search/[keyword].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Search = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, \"Search : \", props.keyword), __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \" Park \"), props.parks.map(park => __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, park.location_info.name)), __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \" Notes\"), props.notes.map(note => __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \" \", note.nid)), __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \" Orders\"), props.orders.map(order => __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, order.oid)), __jsx(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \" Visitors\"), props.visitors.map(visitor => __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, visitor.vid)));\n\nSearch.getInitialProps = async function (context) {\n  const {\n    keyword\n  } = context.query;\n  const res_park = await fetch(`http://localhost:8080/parkpay/parks?key=${keyword}`);\n  const parks = await res_park.json();\n  const res_note = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n  const notes = await res_note.json();\n  const res_order = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n  const orders = await res_order.json();\n  const res_visitor = await fetch(`http://localhost:8080/parkpay/visitors?key=${keyword}`);\n  const visitors = await res_visitor.json();\n  return {\n    keyword,\n    parks,\n    notes,\n    orders,\n    visitors\n  };\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/search/[keyword].js"],"names":["Layout","fetch","Search","props","keyword","parks","map","park","location_info","name","notes","note","nid","orders","order","oid","visitors","visitor","vid","getInitialProps","context","query","res_park","json","res_note","res_order","res_visitor"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAClB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcA,KAAK,CAACC,OAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,IAAI,CAACC,aAAL,CAAmBC,IAAvB,CADH,CAHH,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGN,KAAK,CAACO,KAAN,CAAYJ,GAAZ,CAAgBK,IAAI,IACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAKA,IAAI,CAACC,GAAV,CADD,CAPH,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVF,EAWGT,KAAK,CAACU,MAAN,CAAaP,GAAb,CAAiBQ,KAAK,IACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,KAAK,CAACC,GAAV,CADD,CAXH,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,EAeGZ,KAAK,CAACa,QAAN,CAAeV,GAAf,CAAmBW,OAAO,IACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,OAAO,CAACC,GAAZ,CADD,CAfH,CADF;;AAsBAhB,MAAM,CAACiB,eAAP,GAAyB,gBAAeC,OAAf,EAAwB;AAC7C,QAAM;AAAEhB,IAAAA;AAAF,MAAcgB,OAAO,CAACC,KAA5B;AACA,QAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAAE,2CAA0CG,OAAQ,EAApD,CAA5B;AACA,QAAMC,KAAK,GAAG,MAAMiB,QAAQ,CAACC,IAAT,EAApB;AACA,QAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAAE,2CAA0CG,OAAQ,EAApD,CAA5B;AACA,QAAMM,KAAK,GAAG,MAAMc,QAAQ,CAACD,IAAT,EAApB;AACA,QAAME,SAAS,GAAG,MAAMxB,KAAK,CAAE,2CAA0CG,OAAQ,EAApD,CAA7B;AACA,QAAMS,MAAM,GAAG,MAAMY,SAAS,CAACF,IAAV,EAArB;AACA,QAAMG,WAAW,GAAG,MAAMzB,KAAK,CAAE,8CAA6CG,OAAQ,EAAvD,CAA/B;AACA,QAAMY,QAAQ,GAAG,MAAMU,WAAW,CAACH,IAAZ,EAAvB;AACA,SAAO;AAAEnB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBK,IAAAA,KAAlB;AAAyBG,IAAAA,MAAzB;AAAiCG,IAAAA;AAAjC,GAAP;AACH,CAXD;;AAaA,eAAed,MAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nconst Search = props => (\n  <Layout>\n    <h3>Search : {props.keyword}</h3>\n    <h2> Park </h2>\n    {props.parks.map(park => (\n        <p>{park.location_info.name}</p>\n    ))}\n    <h2> Notes</h2>\n    {props.notes.map(note =>(\n      <p> {note.nid}</p>\n    ))}\n    <h2> Orders</h2>\n    {props.orders.map(order=>(\n      <p>{order.oid}</p>\n    ))}\n    <h2> Visitors</h2>\n    {props.visitors.map(visitor=>(\n      <p>{visitor.vid}</p>\n    ))}\n  </Layout>\n);\n\nSearch.getInitialProps = async function(context) {\n    const { keyword } = context.query;\n    const res_park = await fetch(`http://localhost:8080/parkpay/parks?key=${keyword}`);\n    const parks = await res_park.json();\n    const res_note = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n    const notes = await res_note.json();\n    const res_order = await fetch(`http://localhost:8080/parkpay/notes?key=${keyword}`);\n    const orders = await res_order.json(); \n    const res_visitor = await fetch(`http://localhost:8080/parkpay/visitors?key=${keyword}`);\n    const visitors = await res_visitor.json()\n    return { keyword, parks, notes, orders, visitors };\n};\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}