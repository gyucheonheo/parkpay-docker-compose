{"ast":null,"code":"var _jsxFileName = \"/Users/gyucheonheo/Documents/parkpay/pages/orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Alert from '../components/Alert';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nconst Orders = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, \"Orders\"), props.orders ? __jsx(\"table\", {\n  class: \"table\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Order Id\"), __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Park Id\"), __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Date\"), __jsx(\"th\", {\n  scope: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Type\"), __jsx(\"th\", {\n  scople: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Amount\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.orders.map(order => __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, order.oid)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, order.pid)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, order.date)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, order.type)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, order.amount)), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/orders/[id]\",\n  as: `/orders/${order.oid}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, __jsx(\"a\", {\n  role: \"button\",\n  class: \"btn btn-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"View\")), __jsx(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), __jsx(\"button\", {\n  type: \"button\",\n  class: \"btn btn-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"Delete\")))))) : __jsx(Alert, {\n  type: \"danger\",\n  text: \"No order yet!\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}));\n\nOrders.getInitialProps = async function (context) {\n  const res = await fetch(`http://localhost:8080/parkpay/orders`);\n  const orders = await res.json();\n  return {\n    orders\n  };\n};\n\nexport default Orders;","map":{"version":3,"sources":["/Users/gyucheonheo/Documents/parkpay/pages/orders.js"],"names":["Layout","Alert","Link","fetch","Orders","props","orders","map","order","oid","pid","date","type","amount","getInitialProps","context","res","json"],"mappings":"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","sourcesContent":["import Layout from '../components/MyLayout';\nimport Alert from '../components/Alert';\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch';\n\nconst Orders = props => (\n  <Layout>\n    <h1>Orders</h1>\n    {props.orders ?\n        <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Order Id</th>\n            <th scope=\"col\">Park Id</th>\n            <th scope=\"col\">Date</th>\n            <th scope=\"col\">Type</th>\n            <th scople=\"col\">Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n            {props.orders.map(order => (\n                  <tr>\n                    <td>\n                      <a>{order.oid}</a>\n                    </td>\n                    <td>\n                      <a>{order.pid}</a>\n                    </td>\n                    <td>\n                      <a>{order.date}</a>\n                    </td>\n                    <td>\n                      <a>{order.type}</a>\n                    </td>\n                    <td>\n                      <a>{order.amount}</a>\n                    </td>\n                    <td>\n                      <Link href=\"/orders/[id]\" as={`/orders/${order.oid}`}>\n                        <a role=\"button\" class=\"btn btn-success\">View</a>\n                      </Link>\n                      <span/>\n                      <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n                    </td>\n                  </tr>\n              ))}\n  \n        </tbody>\n      </table>\n    :\n    <Alert type=\"danger\" text=\"No order yet!\"></Alert>\n    }\n  </Layout>\n);\n\nOrders.getInitialProps = async function(context) {\n  const res = await fetch(`http://localhost:8080/parkpay/orders`);\n  const orders = await res.json();\n\n  return { orders };\n};\n\nexport default Orders;"]},"metadata":{},"sourceType":"module"}